import matplotlib.pyplot as plt
import matplotlib.animation as anim

def plot_cont(frames, gen):
    x = []
    y = []
    fig = plt.figure()
    ax = fig.add_subplot(1,1,1)

    def update(i):
        xi, yi = next(gen)
        y.append(yi)
        x.append(xi)
        ax.clear()
        ax.plot(x, y)
        print(i, ':', xi, ': ', yi)

    a = anim.FuncAnimation(fig, update, frames=frames, repeat=False)
    plt.show()

def van_eyck():
    d = {}
    i = 0
    x = 0
    while True:
        # At index i I see x again
        if x in d:
            y = i - d[x]  # next number is last time I saw x
            d[x] = i
        # At index i I see a new number
        else:
            y = 0  # so next number is 0
            d[x] = i
        i += 1  # increment index by 1
        print(i, y)
        yield i, y
        x = y

def diff(gen):
    x0 = 0
    y0 = 0
    for x1, y1 in gen:
        yield (x0, y1 - y0)
        x0, y0 = x1, y1


# def van_eyck(x: int, i: int, d: dict):
#     if x in d:

def print_wait(n):
    print(n)
    input()
        
# van_eyck() |> map$(print_wait) |> consume   
van_eyck() |> filter$(tup -> tup[1] == 0) |> map$(tup -> tup[0]) |> enumerate |> diff |> plot_cont$(100000)