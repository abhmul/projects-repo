// For format details, see https://aka.ms/vscode-remote/devcontainer.json or the definition README at
// https://github.com/microsoft/vscode-dev-containers/tree/master/containers/docker-existing-dockerfile
{
	"name": "my-projects",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "../dockerfile",

	// Uncomment the next line to have VS Code connect as an existing non-root user in the container. 
	// On Linux, by default, the container user's UID/GID will be updated to match your local user. See
	// https://aka.ms/vscode-remote/containers/non-root for details on adding a non-root user if none exist.
	"remoteUser": "vscode",
	// "containerUser": "abhijeet",

	// Uncomment the next line if you will use a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
	"runArgs": [
		"--gpus=all",
		"-u", "1000:1000"  // idk how to run $(id -u) here
	],

	"mounts": [ 
		"source=/media/abhijeet/Data/,target=/data,type=bind",
		"source=/home/abhijeet/dev/,target=/workspaces/dev,type=bind"
	 ],

	// Use 'settings' to set *default* container specific settings.json values on container create. 
	// You can edit these settings after create using File > Preferences > Settings > Remote.
	"settings": { 
		// This will ignore your local shell user setting for Linux since shells like zsh are typically 
		// not in base container images. You can also update this to an specific shell to ensure VS Code 
		// uses the right one for terminals and tasks. For example, /bin/bash (or /bin/ash for Alpine).
		"terminal.integrated.shell.linux": null
	},

	// Use 'appPort' to create a container with published ports. If the port isn't working, be sure
	// your server accepts connections from all interfaces (0.0.0.0 or '*'), not just localhost.
	// "appPort": [],

	"remoteEnv": {
		"PATH": "${containerEnv:PATH}:/workspaces/dev/TeXDown",
	},

	// Uncomment the next line to run commands after the container is created - for example installing git.
	"postCreateCommand": "pwd && cp .bash_aliases $HOME/.bash_aliases",

	// Add the IDs of extensions you want installed when the container is created in the array below.
	"extensions": [
		"ms-python.python",
		"tomoki1207.pdf",
		"goessner.mdmath",
		"davidanson.vscode-markdownlint",
		"shd101wyy.markdown-preview-enhanced",
		"yzhang.markdown-all-in-one",
		"yzane.markdown-pdf"
	]
}
