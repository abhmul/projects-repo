FROM conda/miniconda3:latest

# Avoid warnings by switching to noninteractive
ENV DEBIAN_FRONTEND=noninteractive

# Or your actual UID, GID on Linux if not the default 1000
ARG USERNAME=abhmul
ARG USER_UID=1000
ARG USER_GID=$USER_UID

# Uncomment the following COPY line and the corresponding lines in the `RUN` command if you wish to
# include your requirements in the image itself. It is suggested that you only do this if your
# requirements rarely (if ever) change.
COPY environment.yml /tmp/conda-tmp/

# Update Python environment based on environment.yml
RUN conda env create -f /tmp/conda-tmp/environment.yml \
    && rm -rf /tmp/conda-tmp \
    && echo "conda activate pyprojects" >> ~/.bashrc

# Configure apt and install packages
RUN apt-get update \
    && apt-get -y install --no-install-recommends apt-utils dialog 2>&1 \
    #
    # Verify git, process tools, lsb-release (common in install instructions for CLIs) installed
    && apt-get -y install git procps lsb-release \
    #   
    # Add vim
    && apt-get -y install vim \
    # [Optional] Uncomment the next three lines to add sudo support
    && apt-get install -y sudo \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME \
    #
    # Clean up
    && apt-get autoremove -y \
    && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/*

RUN useradd -r -u ${USER_UID} -g ${USERNAME} ${USERNAME}}
USER ${USERNAME}

# Switch back to dialog for any ad-hoc use of apt-get
ENV DEBIAN_FRONTEND=

# Make RUN commands use the new environment:
# SHELL ["conda", "run", "-n", "pyprojects", "/bin/bash", "-c"]
# ENTRYPOINT ["conda", "run", "-n", "pyprojects", "/bin/bash", "-c"]
